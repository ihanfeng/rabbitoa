<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
  		http://www.springframework.org/schema/aop             
  		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  		http://www.springframework.org/schema/data/jpa
    	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
        <context:annotation-config/>
        <context:component-scan base-package="com.zhm.rabbit.oa">
            <context:exclude-filter type="annotation"
				expression="org.springframework.stereotype.Controller" />
        </context:component-scan>
        <aop:aspectj-autoproxy />  
        <!-- cxf webservice 配置 -->   
       	<import resource="classpath:config/cxf-services.xml" /> 
       	<!-- 工作流 activiti配置 -->
        <import resource="classpath:config/activitiConfig.xml" />  
        <jpa:repositories base-package="com.zhm.rabbit.oa.repositories.dao" />
        <!-- 分布式缓存 memcached配置 begin -->
        <import resource="classpath:config/simplesm-context.xml" />     
        <bean name="defaultMemcachedClient" class="com.google.code.ssm.CacheFactory">           
        	<property name="cacheClientFactory">                 
        		<bean class="com.google.code.ssm.providers.xmemcached.MemcacheClientFactoryImpl" />           
        	</property>           
        	<property name="addressProvider">                 
        		<bean class="com.google.code.ssm.config.DefaultAddressProvider">                      
        			<property name="address" value="127.0.0.1:12345" />                 
        		</bean>           
        	</property>           
        	<property name="configuration">                 
        		<bean class="com.google.code.ssm.providers.CacheConfiguration">                       
        			<property name="consistentHashing" value="true" />                 
        		</bean>           
        	</property>      
        </bean>
        <!-- 分布式缓存 memcached配置 end -->
        <bean id="propertyConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="ignoreUnresolvablePlaceholders" value="true" />
			<property name="locations">
				<list>
					<!-- 数据库配置文件 -->
					<value>classpath:jdbc.properties</value>
					<!-- 单点登录地址配置文件 -->
					<value>classpath:sso.properties</value>
				</list>
			</property>
		</bean>
		<!-- shiro+cas 单点登录配置 begin -->
		<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		    <property name="securityManager" ref="securityManager"/>
		    <property name="loginUrl" value="${sso.loginurlpre}/cas-server/login?service=${sso.currurlpre}/oasys/home/main" />  
		    <property name="filters">
	            <util:map>
	                <entry key="casFilter" value-ref="casFilter"/> 
	            </util:map>
	        </property>
		    <property name="filterChainDefinitions">
		        <value>
		            /home/main = casFilter
		            /** = roles[ROLE_USER"]
		        </value>
		    </property>
		</bean>
		<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">  
	        <property name="failureUrl" value="/error.jsp"/>  
	    </bean>  
	    <bean id="casRealm" class="com.zhm.rabbit.oa.shiro.MyCasRealm">  
	        <property name="defaultRoles" value="ROLE_USER"/>       
	        <property name="casServerUrlPrefix" value="${sso.loginurlpre}/cas-server"/>  
	        <property name="casService" value="${sso.currurlpre}/oasys/home/main"/>  
	    </bean>  
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" 
		    depends-on="userRepository,
		    			deptRepository,
		    			positionRepository,
		    			deptMenuRepository,
		    			positionMenuRepository,
		    			oaMenuRepository">
		    <property name="realm" ref="casRealm"/>
		    <property name="subjectFactory" ref="casSubjectFactory"/>  
		</bean>
		<bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>  
		<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
		<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
	        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>  
	        <property name="arguments" ref="securityManager"/>  
	    </bean>  
		<!-- shiro+cas 单点登录配置 end -->
		<bean id="multipartResolver"     class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
			<!-- 该属性用来配置可上传文件的最大 byte 数 -->  
			<property name="maxUploadSize">  
            	<value>409715200</value>  
      		</property>
		</bean> 
     <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="filters" value="stat" />
   	 	<!--  <property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" />-->
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"><ref bean="dataSource"/></property>
    </bean>
    <bean id="transactionManager" 
          class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"/>
    <bean id="entityManagerFactory" 
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    	  p:dataSource-ref="dataSource"
          p:persistenceUnitName="mysql" >
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" >
            	<property name="database" value="MYSQL" />
				<property name="showSql" value="false" />
				<property name="generateDdl" value="true" />
            </bean>
        </property>
    </bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>